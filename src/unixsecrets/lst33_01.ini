# .xinitrc written by James C. Armstrong, Jr, (c) 1996.
# Свободно распространяемая программа.
#
xdpyinfo > /tmp/xdpy.$$
#
# Сохранение информации о мониторе в файле.  Для обеспечения
# уникальности имени используется расширение .$$
# 
width=`awk '/dimensions/{print $2}' /tmp/xdpy.$$ | cut -dx -f1`
height=`awk '/dimensions/{print $2}' /tmp/xdpy.$$ | cut -dx -f2`
#
# Поиск ширины и высоты экрана из выходного файла.
# Для этой цели, возможно, больше подходит программа на С или на yacc
#.
#
vid=`awk -F: '/default visual id/{ print $2}' /tmp/xdpy.$$`
#
# Существует несколько визуальных классов.
# Нам понадобится один из них, который будет использоваться по умолчанию.
# Нужное значение представляется шестнадцатеричным числом,
# но я планирую использовать его в виде строки.
#
# Затем необходимо простроить таблицу для поиска строки и определения имени класса цвета.
#
egrep 'visual id|class' /tmp/xdpy.$$ | \
 egrep -v 'buffer|default' | \
 cut -d: -f2 | paste - - > /tmp/xdpy.2.$$
colorclass=`fgrep $vid /tmp/xdpy.2.$$ | awk '{print $2}'`
#
# Таблица создана и данные Xdpyinfo обработаны, 
# так что файлы можно удалить.
#
rm /tmp/xdpy.$$ /tmp/xdpy.2.$$
#
# Удаление других файлов настройки, которые могут изменить конфигурацию.
#
rm .XDefaults .twmrc
#
# Зная класс цвета, можно внести любые изменения в 
# другие файлы загрузки.
#
case $colorclass in PseudoColor|DirectColor|StaticColor|TrueColor)
  xearth -label -fork
  #
  # Запуск хearth в фоновом режиме
  #
  if
    [ -f .XDefaults.color ]
  then
    cp .XDefaults.color .XDefaults
  fi
  #
  # Задание файла цветов, используемых по умолчанию 
  #
  if 
    [ -f .twmrc.colors ]
  then
    cp .twmrc.colors .twmrc
  fi
  #
  # Задание цветов для TWM
  #
  # Эта операция может выполняться иначе, 
  # если вы используете другой диспетчер окон 
  #
  conscolor="-bg brown -fg yellow"
  xt1color="-bg black -fg red"
  xt2color="-bg darkslategrey -fg skyblue"
  xt3color="-bg navy -fg gold"
  #
  # В трех окнах Х-терминалов используются различные цвета,
  # на самом деле это не удобно 
  #
;;
GrayScale|StaticGray)
  xphoon -t 5&
  #
  # Запуск xhpoon в фоновом режиме
  #
  if 
    [ -f .XDefaults.gray ]
  then
    cp .XDefaults.gray .XDefaults
  fi
  #
  # Задание цветов в оттенках серого.
  #
  if 
    [ -f .twmrc.gray ]
  then
    cp .twmrc.gray .twmrc
  fi
  #
  # Задание цветов в оттенках серого для TWM
  #
  # При использовании другого диспетчера окон
  # эта операция может выполняться иначе
  #
  conscolor=""
  xt1color=""
  xt2color=""
  xt3color=""
  #
  # При использовани цветов в оттенках серого
  # окна Х-терминалов не различимы 
  #
  ;;
esac
if 
  [ -f .XDefaults ]
then
  xrdb -merge .XDefaults
fi
#
# Загрузка ресурсов
#
if 
  [ $width -eq 640 ]
then
  #
  # Загрузка в минимальной конфигурации
  #
  if 
    [ -f .twmrc.small ]
  then
    cat .twmrc.small >> .twmrc
  fi
  #
  # Если имеется минимальная конфигурация, лучше использовать ее!
  #
  xclock -update 1 -g =60x60-0+0&
  xbiff -g =60x60-85+0&
  xload -g =100x50+0+0&
  xterms=.xterm.small
  #
  # Запуск приложений с окнами фиксированного размера
  # для экрана с низким разрешением 
  #
else
  if 
    [ -f .twmrc.large ]
  then
    cat .twmrc.large >> .twmrc
  fi
  #
  # Параметры для экрана с высоким разрешением!
  #
  xclock -update 1 -g =80x80-0+0&
  xbiff -g =80x80-85+0&
  xload -g =250x100+0+0&
  xterms=.xterms.large
  #
  # Если возможно, используйте параметры для экрана
  # с высоким разрешением. Будет доступно большее пространство
  #
fi
cat .twmrc.menus >> .twmrc
#
# Запуск диспетчера окон с созданным файлом инициализации.
#
twm&
#
# Установка указателя для корневого окна
#
xsetroot -cursor_name trek
#
# Запуск нескольких приложений в свернутом виде.
#
xman -iconic&
xclipboard -iconic&
#
# Запуск диспетчера файлов.  
#
xfm&
#
# Следующие три команды задают звуковой сигнал,
# скорость перемещения указателя мыши 
# и разрешают доступ к серверу.
#
xset m 4 2
xset b 50 400 200
xhost +
#
# Проверка наличия файла, описывающего рабочую среду.
# Если он отсутствует, то загружается текущая среда.
#
if
  [ -f .xinitrc.`hostname` ]
then
 . .xinitrc.`hostname`
fi
#
# И, наконец, запустим два рабочих X-терминала
# и один Х-терминал для вывода консольных сообщений 
#
. $xterms
xterm $conscolor -C -g =80x4+0+0 -iconic
